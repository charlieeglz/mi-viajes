{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useSearch.js\nimport { useQuery } from \"@tanstack/react-query\";\nexport function useSearch(filters = {}) {\n  _s();\n  // 1) Default vacío para evitar null/destructuring\n  const {\n    origin = \"\",\n    budget = \"\",\n    daysMin = \"\",\n    daysMax = \"\",\n    selectedMonth = \"\"\n  } = filters;\n  return useQuery({\n    // 2) Key única por conjunto de filtros\n    queryKey: [\"search\", origin, budget, daysMin, daysMax, selectedMonth],\n    // 3) Sólo dispara cuando TODOS los filtros están completos\n    enabled: Boolean(origin.trim() && budget !== \"\" && daysMin !== \"\" && daysMax !== \"\" && selectedMonth),\n    // 4) Construye la URL y apunta al backend\n    queryFn: async () => {\n      // Si no usas proxy: const baseUrl = 'http://localhost:5002'\n      const url = `/api/search?${new URLSearchParams({\n        origin,\n        budget: String(budget),\n        daysMin: String(daysMin),\n        daysMax: String(daysMax),\n        selectedMonth\n      }).toString()}`;\n      const res = await fetch(url, {\n        // Esto con proxy irá al backend en 5002\n        // Si no usas proxy, usa:\n        // fetch(`http://localhost:5002${url}`, { credentials: 'include', ... })\n        credentials: \"include\"\n      });\n      if (!res.ok) {\n        // Leer el body si quieres más detalle:\n        let text = \"\";\n        try {\n          text = await res.text();\n        } catch {}\n        throw new Error(`Error ${res.status}${text ? \": \" + text : \"\"}`);\n      }\n      return res.json();\n    },\n    staleTime: 1000 * 60 * 5 // 5 minutos\n  });\n}\n_s(useSearch, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","useSearch","filters","_s","origin","budget","daysMin","daysMax","selectedMonth","queryKey","enabled","Boolean","trim","queryFn","url","URLSearchParams","String","toString","res","fetch","credentials","ok","text","Error","status","json","staleTime"],"sources":["/Users/carlosgonzalezportela/Desktop/mi-viajes/client/src/hooks/useSearch.js"],"sourcesContent":["// src/hooks/useSearch.js\nimport { useQuery } from \"@tanstack/react-query\";\n\nexport function useSearch(filters = {}) {\n  // 1) Default vacío para evitar null/destructuring\n  const {\n    origin = \"\",\n    budget = \"\",\n    daysMin = \"\",\n    daysMax = \"\",\n    selectedMonth = \"\",\n  } = filters;\n\n  return useQuery({\n    // 2) Key única por conjunto de filtros\n    queryKey: [\"search\", origin, budget, daysMin, daysMax, selectedMonth],\n    // 3) Sólo dispara cuando TODOS los filtros están completos\n    enabled: Boolean(\n      origin.trim() &&\n        budget !== \"\" &&\n        daysMin !== \"\" &&\n        daysMax !== \"\" &&\n        selectedMonth\n    ),\n    // 4) Construye la URL y apunta al backend\n    queryFn: async () => {\n      // Si no usas proxy: const baseUrl = 'http://localhost:5002'\n      const url = `/api/search?${new URLSearchParams({\n        origin,\n        budget: String(budget),\n        daysMin: String(daysMin),\n        daysMax: String(daysMax),\n        selectedMonth,\n      }).toString()}`;\n\n      const res = await fetch(url, {\n        // Esto con proxy irá al backend en 5002\n        // Si no usas proxy, usa:\n        // fetch(`http://localhost:5002${url}`, { credentials: 'include', ... })\n        credentials: \"include\",\n      });\n\n      if (!res.ok) {\n        // Leer el body si quieres más detalle:\n        let text = \"\";\n        try {\n          text = await res.text();\n        } catch {}\n        throw new Error(`Error ${res.status}${text ? \": \" + text : \"\"}`);\n      }\n      return res.json();\n    },\n    staleTime: 1000 * 60 * 5, // 5 minutos\n  });\n}\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,QAAQ,uBAAuB;AAEhD,OAAO,SAASC,SAASA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;EAAAC,EAAA;EACtC;EACA,MAAM;IACJC,MAAM,GAAG,EAAE;IACXC,MAAM,GAAG,EAAE;IACXC,OAAO,GAAG,EAAE;IACZC,OAAO,GAAG,EAAE;IACZC,aAAa,GAAG;EAClB,CAAC,GAAGN,OAAO;EAEX,OAAOF,QAAQ,CAAC;IACd;IACAS,QAAQ,EAAE,CAAC,QAAQ,EAAEL,MAAM,EAAEC,MAAM,EAAEC,OAAO,EAAEC,OAAO,EAAEC,aAAa,CAAC;IACrE;IACAE,OAAO,EAAEC,OAAO,CACdP,MAAM,CAACQ,IAAI,CAAC,CAAC,IACXP,MAAM,KAAK,EAAE,IACbC,OAAO,KAAK,EAAE,IACdC,OAAO,KAAK,EAAE,IACdC,aACJ,CAAC;IACD;IACAK,OAAO,EAAE,MAAAA,CAAA,KAAY;MACnB;MACA,MAAMC,GAAG,GAAG,eAAe,IAAIC,eAAe,CAAC;QAC7CX,MAAM;QACNC,MAAM,EAAEW,MAAM,CAACX,MAAM,CAAC;QACtBC,OAAO,EAAEU,MAAM,CAACV,OAAO,CAAC;QACxBC,OAAO,EAAES,MAAM,CAACT,OAAO,CAAC;QACxBC;MACF,CAAC,CAAC,CAACS,QAAQ,CAAC,CAAC,EAAE;MAEf,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;QAC3B;QACA;QACA;QACAM,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,IAAI,CAACF,GAAG,CAACG,EAAE,EAAE;QACX;QACA,IAAIC,IAAI,GAAG,EAAE;QACb,IAAI;UACFA,IAAI,GAAG,MAAMJ,GAAG,CAACI,IAAI,CAAC,CAAC;QACzB,CAAC,CAAC,MAAM,CAAC;QACT,MAAM,IAAIC,KAAK,CAAC,SAASL,GAAG,CAACM,MAAM,GAAGF,IAAI,GAAG,IAAI,GAAGA,IAAI,GAAG,EAAE,EAAE,CAAC;MAClE;MACA,OAAOJ,GAAG,CAACO,IAAI,CAAC,CAAC;IACnB,CAAC;IACDC,SAAS,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC,CAAE;EAC5B,CAAC,CAAC;AACJ;AAACvB,EAAA,CAnDeF,SAAS;EAAA,QAUhBD,QAAQ;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}